<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmmuOpenShop" xml:space="preserve">
    <value>Press ~INPUT_CONTEXT~ to buy weapons.</value>
  </data>
  <data name="AmmuPistol" xml:space="preserve">
    <value>Pistol Ammo x50</value>
  </data>
  <data name="AmmuPistolSubtitle" xml:space="preserve">
    <value>Standard pistol, suitable for self defense.</value>
  </data>
  <data name="AmmuPumpShotgun" xml:space="preserve">
    <value>Pump Shotgun Ammo x20</value>
  </data>
  <data name="AmmuPumpShotgunSubtitle" xml:space="preserve">
    <value>Standard shotgun for self defense purposes.</value>
  </data>
  <data name="AmmuSubtitle" xml:space="preserve">
    <value>Weapon Shop</value>
  </data>
  <data name="AmmuTitle" xml:space="preserve">
    <value>AmmuNation</value>
  </data>
  <data name="ArmedBonus" xml:space="preserve">
    <value>Armed NPC Kill Bonus +$10</value>
  </data>
  <data name="BuyNoMoney" xml:space="preserve">
    <value>You do not have enough money for this.</value>
  </data>
  <data name="DifficultyCarbineRifle" xml:space="preserve">
    <value>Carbine Rifle</value>
  </data>
  <data name="DifficultyChange" xml:space="preserve">
    <value>Difficulty Changed</value>
  </data>
  <data name="DifficultyEasy" xml:space="preserve">
    <value>Easy</value>
  </data>
  <data name="DifficultyHard" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="DifficultyHelp" xml:space="preserve">
    <value>Difficulty has been upgraded to {0}. Ambient NPCs will now use {0}.</value>
  </data>
  <data name="DifficultyInitial" xml:space="preserve">
    <value>Initial</value>
  </data>
  <data name="DifficultyMicroSmg" xml:space="preserve">
    <value>Micro SMGs</value>
  </data>
  <data name="DifficultyNether" xml:space="preserve">
    <value>Nether</value>
  </data>
  <data name="DifficultyNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="DifficultyPumpShotgun" xml:space="preserve">
    <value>Pump Shotguns</value>
  </data>
  <data name="DifficultyRPG" xml:space="preserve">
    <value>Rocket Launchers</value>
  </data>
  <data name="DifficultyShard" xml:space="preserve">
    <value>Difficulty has been upgraded to {0}.</value>
  </data>
  <data name="ExceptionMain" xml:space="preserve">
    <value>NoArtifactLights has encountered error and must exit.</value>
  </data>
  <data name="ExceptionMenu" xml:space="preserve">
    <value>NoArtifactLights menu has encountered error and menu is disabled.</value>
  </data>
  <data name="FirstKill" xml:space="preserve">
    <value>You have killed a person. Once you killed amount of persons, the difficulty will upgrade.</value>
  </data>
  <data name="GameLoaded" xml:space="preserve">
    <value>The game has been ~b~loaded~s~.</value>
  </data>
  <data name="GameSaved" xml:space="preserve">
    <value>The game has been ~b~saved~s~.</value>
  </data>
  <data name="ItemCashSubtitle" xml:space="preserve">
    <value>Views current cash.</value>
  </data>
  <data name="ItemCashTitle" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="ItemCopsSubtitle" xml:space="preserve">
    <value>Call for police assistence.</value>
  </data>
  <data name="ItemCopsTitle" xml:space="preserve">
    <value>Call for Cops</value>
  </data>
  <data name="ItemDifficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="ItemDIfficultySubtitle" xml:space="preserve">
    <value>Views current difficulty.</value>
  </data>
  <data name="ItemKills" xml:space="preserve">
    <value>Kills</value>
  </data>
  <data name="ItemKillsSubtitle" xml:space="preserve">
    <value>Views current kills.</value>
  </data>
  <data name="ItemLightsSubtitle" xml:space="preserve">
    <value>Sets whether the lights have out of San Andreas or not.</value>
  </data>
  <data name="ItemLightsTitle" xml:space="preserve">
    <value>Blackout</value>
  </data>
  <data name="ItemLoadSubtitle" xml:space="preserve">
    <value>Loads the game from save.</value>
  </data>
  <data name="ItemLoadTitle" xml:space="preserve">
    <value>Load Game</value>
  </data>
  <data name="ItemSaveSubtitle" xml:space="preserve">
    <value>Saves the current game status.</value>
  </data>
  <data name="ItemSaveTitle" xml:space="preserve">
    <value>Save Game</value>
  </data>
  <data name="ItemSellCarSubtitle" xml:space="preserve">
    <value>Sells current vehicle. You will receive some dollars.</value>
  </data>
  <data name="ItemSellCarTitle" xml:space="preserve">
    <value>Sell Current Vehicle</value>
  </data>
  <data name="MenuMainTitle" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="NoModelWarning" xml:space="preserve">
    <value>~r~Warning~s~: You must use this mod together with ~b~MrTank's~h~ Player Death No Reset Model~s~ script or ~r~you will stuck~s~ on death screen.</value>
  </data>
  <data name="NoModelWarning2" xml:space="preserve">
    <value>You can download it from ~b~GTA5-Mods~s~.</value>
  </data>
  <data name="NoSave" xml:space="preserve">
    <value>You do not have a save file.</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Welcome to NoArtifactLights survival modification. </value>
  </data>
  <data name="WeaponPistol" xml:space="preserve">
    <value>Pistol</value>
  </data>
  <data name="WeaponsShard" xml:space="preserve">
    <value>Weapons</value>
  </data>
  <data name="WeaponsShardSubtitle" xml:space="preserve">
    <value>A pistol is available in nearby sidewalk.</value>
  </data>
</root>